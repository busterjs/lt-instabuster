{
  "name": "stack-filter",
  "version": "1.0.0",
  "description": "Cleaner and more readable stack traces for all",
  "homepage": "http://busterjs.org/docs/stack-filter",
  "author": {
    "name": "Christian Johansen"
  },
  "contributors": [
    {
      "name": "Christian Johansen",
      "email": "christian@cjohansen.no",
      "url": "http://cjohansen.no"
    }
  ],
  "main": "./lib/stack-filter",
  "repository": {
    "type": "git",
    "url": "https://github.com/busterjs/stack-filter"
  },
  "scripts": {
    "test": "./node_modules/buster/bin/buster-test"
  },
  "devDependencies": {
    "buster": "0.6.11"
  },
  "readme": "============\nstack-filter\n============\n\n    Cleaner and more readable stack traces for all\n\n.. raw:: html\n\n    <a href=\"http://travis-ci.org/busterjs/stack-filter\" class=\"travis\">\n      <img src=\"https://secure.travis-ci.org/busterjs/stack-filter.png\">\n    </a>\n\n``stack-filter`` is a tiny module that strips out unwanted elements of a stack\ntrace and optimizing the remaining items for readability. ``stack-filter`` works\nin browsers (including old and rowdy ones, like IE6) and Node. It will define\nitself as an AMD module if you want it to (i.e. if there's a ``define`` function\navailable).\n\nAPI\n---\n\n``stackFilter(stackTrace[, cwd])``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAccepts a stack trace as a string (e.g. one obtained from ``error.stack``) and\nan optional working directory, and returns a pruned stack trace in the form of\nan array of lines.\n\nThe ``cwd`` option is used to shorten paths by removing common prefixes. For\nexample, Buster.JS uses this option to trim down URLs like\n``http://localhost:1111/sessions/0d15095714a93cd8f9a42e97b0b280fa1550a6ac/resources/lib/file.js``\nto ``lib/files.js``. The current working directory is optional, and may be\neither a string or a regular expression.\n\n::\n\n    var stackFilter = require(\"stack-filter\");\n\n    stackFilter.filters.push(\"jquery.js\"); // Ignore lines from within jQuery\n    stackFilter(error.stack); //=> Lines, excluding any lines from within jQuery\n\n``stackFilter.filters``\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThis array contains all the filters. A filter may be either a string (partial\nmatch against path) or a regular expression.\n",
  "_id": "stack-filter@1.0.0",
  "_from": "stack-filter@~1.0"
}
